class Cluedo{
  1 -- 1 Board;
  1 -- 1 Deck;
  1 -- 3..6 User;
  1 -- 1 TurnOrder;
  1 -- 1 Envelope;
  1 -- * Move;

  private int getPlayerCount(Scanner input) {}
  private void play(Scanner input) {}
  private void viewCards(Scanner input, User user) {}
  private Move moveSelection(Scanner input) {}
  private GuessMove guessSelection(Scanner input) {}
}

class WeaponCard {
  isA Card;

  String name;
}

class RoomCard {
  isA Card;

  String room;
}

class CharacterCard {
  isA Card;

  String name;
}

class Card {
  public boolean represents(String s) {}
}

class Envelope{
  0..1 -> 3 Card;
  
  public boolean processGuess(EnvelopeMove move) {}
}

class Deck {
  0..1 -> 21 Card;

  public Card randomCard() {}
  public Set getEnvelopeContents() {}
  public Card getCardOfType(Class class) {}
}

class TurnOrder {
  0..1 -> 0..6 User guessing;
  0..1 -> 3..6 User order;

  int pointer;

  public User currentUser() {}
  public void endTurn() {}
  public List responseOrder() {}
  public boolean playersLeft() {}
}

class User {
  0..1 -> 3..6 Card hand;
  0..1 -> 3..18 Card seen;
  
  String name;
  CharacterPiece characterPiece;

  public List hasCards(String character, String weapon, String room) {}
  public void addCardToHand(Card card) {}
  public void addCardToSeen(Card card) {}

}


class GuessMove {
  isA Move;

  CharacterPiece character;
  WeaponPiece weapon;
  Room room;
}


class EnvelopeMove {
  isA Move;

  String character;
  String weapon;
  Room room;
}


class CustomMove {
  isA Move;
  1 -- * Step;
  
  int numSteps;
  CharacterPiece characterPiece;

  class BoardPosition {
    int row;
    int col;
    
    public void move(Direction direction){}
    
    public void leap(Step step) {}
  }
  
  class Step{
    Direction direction;
    int count;
     
    enum Direction {N,S,E,W}
  }
}


class Move {
  User user;
  String invalidMessage;
  
  public boolean isValid(Board board){}
  public boolean apply(Board board){}
}


class Board {
  1 -- * Cell;
  1 -- 12 Piece;
  0..1 -> 9 Room;
  
  int rows;
  int cols;
  
  public boolean execute(Move move) {}
  
  public Room inRoom(User user) {}
  
  public Room getRoom(Piece piece) {}
  
  public Cell getCell(int row, int col) {}
}



class Cell {
  * -> 0..1 Room;
  
  CellType type;
  String letterValue;
  boolean isDoorway;
  boolean isOccupied;
  
  enum CellType {ROOM, HALLWAY, OUT_OF_BOUNDS}
}


class Room {
  String name;
}


class Piece {
  String name;
  int row;
  int col;
  
  public void move(int x, int y) {}
}


class WeaponPiece {
  isA Piece;
}


class CharacterPiece {
  int id;
  isA Piece;
}

class User {
  position 362 427 278 146;
}

class Cell {
  position 1011 229 159 129;
  position.association Cell__Room 47,129 21,0;
}

class Cluedo {
  position 507 7 287 146;
  position.association Cluedo__User 140,146 262,0;
  position.association Board__Cluedo 287,31 0,2;
  position.association Cluedo__Deck 0,48 208,0;
  position.association Cluedo__TurnOrder 129,146 78,0;
  position.association Cluedo__Envelope 0,13 302,24;
  position.association Cluedo__Move 194,146 75,0;
}

class Envelope {
  position 23 87 302 78;
  position.association Cluedo__Envelope 30,0 76,58;
}

class Deck {
  position 91 213 228 112;
  position.association Card__Deck 90,112 102,0;
}

class Card {
  position 13 443 226 78;
}

class WeaponCard {
  position 5 632 112 78;
}

class CharacterCard {
  position 281 631 112 78;
}

class RoomCard {
  position 143 633 109 78;
}

class Piece {
  position 1244 284 166 129;
}

class WeaponPiece {
  position 1180 498 109 61;
}

class CharacterPiece {
  position 1297 496 114 78;
}

class TurnOrder {
  position 363 191 226 214;
  position.association Cluedo__TurnOrder 109,10 0,39;
  position.association TurnOrder__User:order 139,146 146,0;
  position.association TurnOrder__User:guessing 9,146 14,0;
}

class Move {
  position 744 218 197 129;
  position.association Cluedo__Move 30,0 140,58;
}

class User {
  position 362 427 278 146;
  position.association Card:hand__User 0,37 226,4;
  position.association Card:seen__User 0,83 226,62;
}

class CustomMove {
  position 785 542 231 95;
  position.association CustomMove__Step 99,78 30,0;
}

class GuessMove {
  position 655 416 197 112;
}

class EnvelopeMove {
  position 939 417 138 112;
}

class Board {
  position 1207 42 202 163;
  position.association Board__Cell 34,163 77,0;
  position.association Board__Piece 174,163 86,0;
  position.association Board__Room 77,112 82,0;
  position.association Board__Room:rooms 75,112 102,0;
}

class Room {
  position 1090 404 112 78;
}

class BoardPosition {
  position 613 681 187 129;
}

class Step {
  position 1039 716 153 95;
}//$?[End_of_model]$?
